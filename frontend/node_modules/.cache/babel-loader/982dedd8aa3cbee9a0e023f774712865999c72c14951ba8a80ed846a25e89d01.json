{"ast":null,"code":"var _jsxFileName = \"/home/kavyamummadi/Assignment/frontend/src/App.js\";\nimport { Component } from \"react\";\nimport dashboardContext from \"./context/dashboardContext\";\nimport BusinessDashboard from \"./components/BusinessDashboard\";\nimport \"./index.css\";\n\n// Root App component with shared state using Context API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      businessData: null\n    };\n    // Method to update businessData in state\n    this.setBusinessData = data => {\n      this.setState({\n        businessData: data\n      });\n    };\n  }\n  // Provides businessData and setter via context to the entire app\n  render() {\n    const {\n      businessData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(dashboardContext.Provider, {\n      value: {\n        businessData,\n        setBusinessData: this.setBusinessData\n      },\n      children: /*#__PURE__*/_jsxDEV(BusinessDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","dashboardContext","BusinessDashboard","jsxDEV","_jsxDEV","App","constructor","args","state","businessData","setBusinessData","data","setState","render","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/kavyamummadi/Assignment/frontend/src/App.js"],"sourcesContent":["import { Component } from \"react\";\nimport dashboardContext from \"./context/dashboardContext\";\nimport BusinessDashboard from \"./components/BusinessDashboard\";\n\nimport \"./index.css\";\n\n// Root App component with shared state using Context API\nclass App extends Component {\n  state = { businessData: null };\n\n  // Method to update businessData in state\n  setBusinessData = (data) => {\n    this.setState({ businessData: data });\n  };\n\n  // Provides businessData and setter via context to the entire app\n  render() {\n    const { businessData } = this.state;\n    return (\n      <dashboardContext.Provider\n        value={{ businessData, setBusinessData: this.setBusinessData }}\n      >\n        <BusinessDashboard />\n      </dashboardContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,iBAAiB,MAAM,gCAAgC;AAE9D,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MAAEC,YAAY,EAAE;IAAK,CAAC;IAE9B;IAAA,KACAC,eAAe,GAAIC,IAAI,IAAK;MAC1B,IAAI,CAACC,QAAQ,CAAC;QAAEH,YAAY,EAAEE;MAAK,CAAC,CAAC;IACvC,CAAC;EAAA;EAED;EACAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEJ;IAAa,CAAC,GAAG,IAAI,CAACD,KAAK;IACnC,oBACEJ,OAAA,CAACH,gBAAgB,CAACa,QAAQ;MACxBC,KAAK,EAAE;QAAEN,YAAY;QAAEC,eAAe,EAAE,IAAI,CAACA;MAAgB,CAAE;MAAAM,QAAA,eAE/DZ,OAAA,CAACF,iBAAiB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEhC;AACF;AAEA,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}